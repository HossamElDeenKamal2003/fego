<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flieger Technology</title>
    <link rel="stylesheet" href="/path/to/your/css">
    <style>
        /* Include the CSS styles here (from the scoped style in Vue component) */
        html, body {
            font-family: 'Raleway', sans-serif;
            padding: 3em 2em;
            font-size: 18px;
            background: #222;
            color: #aaa;
        }
        h1, h2 {
            font-weight: 200;
            margin: 0.4em 0;
        }
        h1 {
            font-size: 3.5em;
        }
        h2 {
            color: #888;
            font-size: 2em;
        }
        .flieger {
            color: rgb(114, 89, 170);
            font-size: 8em;
            font-weight: bold;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3),
                         2px 2px 4px rgba(0, 0, 0, 0.2),
                         3px 3px 6px rgba(0, 0, 0, 0.2),
                         4px 4px 8px rgba(0, 0, 0, 0.2),
                         5px 5px 10px rgba(114, 89, 170, 0.4);
        }
        .parent {
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: whitesmoke;
        }
        .txt-rotate>.wrap {
            border-right: 0.08em solid #666;
        }
        #app {
            display: flex;
            position: relative;
        }
        aside {
            position: fixed;
            top: 0;
            left: -200px;
            width: 200px;
            background: rgb(114, 89, 170);
            height: 100vh;
            transition: left 0.3s ease;
            z-index: 1000;
        }
        aside.active {
            left: 0;
        }
        aside a {
            display: block;
            padding: 10px 5px;
            color: white;
            border-bottom: 1px solid #bbb;
        }
        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: transparent;
            border: none;
            color: white;
            font-size: 2em;
            cursor: pointer;
        }
        .wrapper {
            display: flex;
            flex-direction: column;
            width: 100vw;
            transition: margin-left 0.3s ease;
        }
        header {
            width: 100%;
            padding: 10px;
            background: rgb(114, 89, 170);
        }
        main {
            flex-grow: 2;
            padding: 10px;
        }
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
            display: none;
        }
        .overlay.active {
            display: block;
        }
    </style>
</head>
<body>
    <div id="app">
        <!-- Main Content Area -->
        <div class="wrapper">
            <header>
                <button onclick="toggleNav()" class="btn" style="color: white;">Toggle Sidebar</button>
            </header>
            <main>
                <div class="parent">
                    <!-- First H1: Flieger on Site -->
                    <div>
                        <h1 class="flieger">
                            Flieger
                            <span id="txtRotate1" class="txt-rotate" data-period="2000" data-rotate='["on Site"]'></span>
                        </h1>
                    </div>
                    <!-- Second H1: Flieger on Time -->
                    <div>
                        <h1 class="flieger">
                            Flieger
                            <span id="txtRotate2" class="txt-rotate" data-period="2000" data-rotate='["on Time"]'></span>
                        </h1>
                    </div>
                    <!-- Third H1: Flieger on Budget -->
                    <div>
                        <h1 class="flieger">
                            Flieger
                            <span id="txtRotate3" class="txt-rotate" data-period="2000" data-rotate='["on Budget"]'></span>
                        </h1>
                    </div>
                </div>
            </main>
        </div>

        <!-- Sidebar -->
        <aside id="sidebar">
            <button class="close-btn" onclick="toggleNav()">&times;</button>
            <h1 style="color:white">Flieger</h1>
            <h4 style="color: white; padding-bottom:15px">Username: <%= username %></h4>
            <h4 style="color: white">Role: <%= role %></h4>
            <nav>
                <a href="/admin/users">Users</a>
                <a href="/admin/drivers">Drivers</a>
                <a href="#">Customer Service</a>
            </nav>
            <button class="btn btn-primary" onclick="logout()">Logout</button>
        </aside>
        <div id="overlay" onclick="toggleNav()"></div>
    </div>

    <script>
        // TxtRotate functionality
        function TxtRotate(el, toRotate, period) {
            this.toRotate = toRotate;
            this.el = el;
            this.loopNum = 0;
            this.period = parseInt(period, 10) || 2000;
            this.txt = '';
            this.tick();
            this.isDeleting = false;
        }

        TxtRotate.prototype.tick = function () {
            const i = this.loopNum % this.toRotate.length;
            const fullTxt = this.toRotate[i];

            if (this.isDeleting) {
                this.txt = fullTxt.substring(0, this.txt.length - 1);
            } else {
                this.txt = fullTxt.substring(0, this.txt.length + 1);
            }

            this.el.innerHTML = '<span class="wrap">' + this.txt + '</span>';

            let delta = 300 - Math.random() * 100;

            if (this.isDeleting) { delta /= 2; }

            if (!this.isDeleting && this.txt === fullTxt) {
                delta = this.period;
                this.isDeleting = true;
            } else if (this.isDeleting && this.txt === '') {
                this.isDeleting = false;
                this.loopNum++;
                delta = 500;
            }

            setTimeout(() => this.tick(), delta);
        };

        function initializeTxtRotate() {
            const elements = document.querySelectorAll('.txt-rotate');
            elements.forEach(el => {
                const toRotate = JSON.parse(el.getAttribute('data-rotate'));
                const period = el.getAttribute('data-period');
                if (toRotate) {
                    new TxtRotate(el, toRotate, period);
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            initializeTxtRotate();
        });

        // Toggle sidebar functionality
        function toggleNav() {
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');
            sidebar.classList.toggle('active');
            overlay.classList.toggle('active');
        }

        // Logout functionality
        function logout() {
            localStorage.clear();
            window.location.href = '/';
        }
    </script>
</body>
</html>
